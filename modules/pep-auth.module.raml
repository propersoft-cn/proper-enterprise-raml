#%RAML 1.0
title: auth模块
mediaType: application/json
traits:
  secured: !include ../traits/secured.trait.raml
  dataError: !include ../traits/dataError.trait.raml
  serverError: !include ../traits/serverError.trait.raml
  pageable: !include ../traits/pageInfo.trait.raml
types:
  ########## Login post params ##################
  LoginInfo:
    type: object
    properties:
      username:
        description: 用户名
        required: true
        type: string
      pwd:
        description: 密码
        required: true
        type: string
    example:
      username: "adm"
      pwd: "123456"
  ########## update enable ##################
  EnableUpdate:
    type: object
    properties:
      enable:
        description: 状态
        required: true
        type: boolean
      ids:
        description: ID列表
        required: true
        type: array
    example:
      enable: true
      ids: ["1", "2"]
  ########## post multi ##################
  PostMulti:
    type: object
    properties:
      ids:
        description: ID列表
        required: true
        type: array
    example:
      ids: ["1", "2"]
  ########## Menu ##################
  Menu: !include ../types/auth/menu/menu.type.raml
  Menus: !include ../types/auth/menu/menus.type.raml
  MenuUpdate: !include ../types/auth/menu/menu.update.type.raml
  ########## Resource ##################
  Resource: !include ../types/auth/resource/resource.type.raml
  Resources: !include ../types/auth/resource/resources.type.raml
  ResourceUpdate: !include ../types/auth/resource/resource.update.type.raml
  ########## Role ##################
  Role: !include ../types/auth/role/role.type.raml
  Roles: !include ../types/auth/role/roles.type.raml
  RoleUpdate: !include ../types/auth/role/role.update.type.raml
  ########## User ##################
  User: !include ../types/auth/user/user.type.raml
  Users: !include ../types/auth/user/users.type.raml
  UserPages: !include ../types/auth/user/users.pages.type.raml
  UserUpdate: !include ../types/auth/user/user.update.type.raml
  ########## UserGroup ##################
  UserGroup: !include ../types/auth/user-group/user-group.type.raml
  UserGroups: !include ../types/auth/user-group/user-groups.type.raml
  UserGroupUpdate: !include ../types/auth/user-group/user-group.update.type.raml

/auth:
  /login:
    post:
      description: 用户登录
      is: [secured, dataError, serverError]
      body:
        type: LoginInfo
      responses:
        201:
          body:
            text/plain:
              example: "token"
  /menus:
    get:
      description: 获取用户菜单列表
      is: [secured, serverError]
      queryParameters:
        name:
          description: 菜单名称
          type: string
          required: false
        description:
          description: 菜单描述
          type: string
          required: false
        route:
          description: 前端路径
          type: string
          required: false
        enable:
          description: 菜单状态(空为全部;Y为启用;N为停用)
          type: string
          required: false
      responses:
        200:
          body:
            type: Menus
    post:
      description: 新增菜单
      is: [secured, dataError, serverError]
      body:
        type: MenuUpdate
      responses:
        201:
          body:
            type: Menu
    put:
      description: 更新菜单列表的状态信息
      is: [secured, dataError, serverError]
      body:
        type: EnableUpdate
      responses:
        200:
          body:
            type: Menu
    delete:
      description: 删除多个菜单信息
      is: [secured, dataError, serverError]
      queryParameters:
        ids:
          description: 菜单信息Id列表(使用","分割)
          type: string
      responses:
        204:
        404:
    /{menuId}:
      uriParameters:
        menuId:
          description: 菜单ID
          example: 1
      get:
        description: 取得指定菜单ID详情信息
        is: [secured, serverError]
        responses:
          200:
            body:
              type: Menu
      put:
        description: 更新指定菜单ID的信息
        is: [secured, dataError, serverError]
        body:
          type: MenuUpdate
        responses:
          200:
            body:
              type: Menu
      /resource/{resourceId}:
        uriParameters:
          resourceId:
            description: 资源ID
            example: 1
        post:
          description: 菜单添加资源
          is: [secured, dataError, serverError]
          responses:
            201:
              body:
                type: Menu
        delete:
          description: 菜单删除资源
          is: [secured, dataError, serverError]
          responses:
            204:
            404:
      /resources:
        get:
          description: 取得指定菜单ID的资源列表信息
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Resources
      /roles:
        get:
          description: 取得指定菜单ID的角色列表信息
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Roles
    /parents:
      get:
        description: 父节点菜单列表
        is: [secured, serverError]
        responses:
          200:
            body:
              type: Menus
  /resources:
    post:
      description: 新增资源
      is: [secured, dataError, serverError]
      body:
        type: ResourceUpdate
      responses:
        201:
          body:
            type: Resource
    put:
      description: 更新资源列表的状态信息
      is: [secured, dataError, serverError]
      body:
        EnableUpdate
      responses:
        200:
          body:
            type: Resources
    delete:
      description: 删除多个资源信息
      is: [secured, dataError, serverError]
      queryParameters:
        ids:
          description: 资源信息Id列表(使用","分割)
          type: string
      responses:
        204:
        404:
    /{resourceId}:
      uriParameters:
        resourceId:
          description: 资源ID
          example: 1
      get:
        description: 取得指定资源ID的资源信息
        is: [secured, serverError]
        responses:
          200:
            body:
              type: Resource
      put:
        description: 更新指定资源ID的资源信息
        is: [secured, dataError, serverError]
        body:
          type: ResourceUpdate
        responses:
          200:
            body:
              type: Resource
      delete:
        description: 删除指定资源ID的资源信息
        is: [secured, dataError, serverError]
        responses:
          204:
          404:
      /menus:
        get:
          description: 取得指定资源ID的菜单列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Menus
      /roles:
        get:
          description: 取得指定资源ID的角色列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Roles
  /roles:
    get:
      description: 获取用户角色列表
      is: [secured, serverError]
      queryParameters:
        name:
          description: 角色名称
          type: string
          required: false
        description:
          description: 角色描述
          type: string
          required: false
        parentId:
          description: 角色父节点ID
          type: string
          required: false
        enable:
          description: 角色状态(空为全部;Y为启用;N为停用)
          type: string
          required: false
      responses:
        200:
          body:
            type: Roles
    post:
      description: 新增角色
      is: [secured, dataError, serverError]
      body:
        type: RoleUpdate
      responses:
        201:
          body:
            type: Role
    put:
      description: 更新角色列表的状态信息
      is: [secured, dataError, serverError]
      body:
        type: EnableUpdate
      responses:
        200:
          body:
            type: Role
    delete:
      description: 删除多个角色信息
      is: [secured, dataError, serverError]
      queryParameters:
        ids:
          description: 角色信息Id列表(使用","分割)
          type: string
      responses:
        204:
        404:
    /{roleId}:
      get:
        description: 取得指定角色ID详情信息
        is: [secured, serverError]
        responses:
          200:
            body:
              type: Role
      put:
        description: 更新指定角色ID的信息
        is: [secured, dataError, serverError]
        body:
          type: RoleUpdate
        responses:
          200:
            body:
              type: Role
      /menus:
        get:
          description: 取得指定角色ID的菜单列表
          is: [secured, serverError]
          responses:
            200:
              body:
               type: Menus
        post:
          body:
            type: PostMulti
          description: 角色添加多个菜单
          is: [secured, dataError, serverError]
          responses:
            201:
              body:
                type: Menus
        delete:
          description: 角色删除多个菜单
          is: [secured, dataError, serverError]
          queryParameters:
            ids:
              description: 菜单信息Id列表(使用","分割)
              type: string
          responses:
            204:
            404:
      /parents:
        get:
          description: 获取能够被 roleId 继承的父节点列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Roles
      /resources:
        get:
          description: 取得指定角色ID的资源列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Resources
        post:
          body:
            type: PostMulti
          description: 角色添加多个资源
          is: [secured, dataError, serverError]
          responses:
            201:
              body:
                type: Resources
        delete:
          description: 角色删除多个资源
          is: [secured, dataError, serverError]
          queryParameters:
            ids:
              description: 资源信息Id列表(使用","分割)
              type: string
          responses:
            204:
            404:
      /users:
        get:
          description: 取得指定角色ID的用户列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Users
      /user-groups:
        get:
          description: 取得指定角色ID的用户组列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: UserGroups
  /users:
    get:
      description: 取得查询用户信息列表
      is: [secured, serverError, pageable]
      queryParameters:
        username:
          description: 用户名
          type: string
          required: false
        name:
          description: 用户显示名
          type: string
          required: false
        email:
          description: 用户邮箱
          type: string
          required: false
        phone:
          description: 用户手机号
          type: string
          required: false
        enable:
          description: 用户状态(空为全部;Y为启用;N为停用)
          type: string
          required: false
      responses:
        200:
          body:
            type: UserPages
    post:
      description: 新增用户
      is: [secured, dataError, serverError]
      body:
        type: UserUpdate
      responses:
        201:
          body:
            type: User
    put:
      description: 更新用户列表的状态信息
      is: [secured, dataError, serverError]
      body:
        type: UserUpdate
      responses:
        200:
          body:
            type: User
    delete:
      description: 删除多个用户信息
      is: [secured, dataError, serverError]
      queryParameters:
        ids:
          description: 用户信息Id列表(使用","分割)
          type: string
      responses:
        204:
        404:
    /{userId}:
      uriParameters:
        userId:
          description: 用户ID
          example: 1
      get:
        description: 取得指定用户ID的用户信息
        is: [secured, serverError]
        responses:
          200:
            body:
              type: User
      put:
        description: 更新指定用户ID的用户信息
        is: [secured, dataError, serverError]
        body:
          type: UserUpdate
        responses:
          200:
            body:
              type: User
      delete:
        description: 删除指定用户ID的用户信息
        is: [secured, dataError, serverError]
        responses:
          204:
          404:
      /role/{roleId}:
        uriParameters:
          roleId:
            description: 角色ID
            example: 1
        post:
          description: 用户添加新的角色
          is: [secured, dataError, serverError]
          responses:
            201:
              body:
                type: Role
        delete:
          description: 用户删除角色
          is: [secured, dataError, serverError]
          responses:
            204:
            404:
      /roles:
        get:
          description: 取得指定用户ID的角色列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Roles
      /user-groups:
        get:
          description: 取得指定用户ID的用户组列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: UserGroups
    /query:
      get:
        description: 通过用户名或者显示名或者手机号查询用户信息列表
        is: [secured, serverError]
        queryParameters:
          condition:
            description: 用户名或者显示名或者手机号
            type: string
            required: false
        responses:
          200:
            body:
              type: Users
  /user-groups:
    get:
      description: 取得查询用户信息列表
      is: [secured, serverError]
      queryParameters:
        name:
          description: 用户组名
          type: string
          required: false
        description:
          description: 用户组描述
          type: string
          required: false
        enable:
          description: 用户状态(空为全部;Y为启用;N为停用)
          type: string
          required: false
      responses:
        200:
          body:
            type: UserGroups
    post:
      description: 新增用户组
      is: [secured, dataError, serverError]
      body:
        type: UserGroupUpdate
      responses:
        201:
          body:
            type: UserGroup
    put:
      description: 更新用户组列表的状态信息
      is: [secured, dataError, serverError]
      body:
        type: EnableUpdate
      responses:
        200:
          body:
            type: UserGroup
    delete:
      description: 删除多个用户组信息
      is: [secured, dataError, serverError]
      queryParameters:
        ids:
          description: 用户组信息Id列表(使用","分割)
          type: string
      responses:
        204:
        404:
    /{id}:
      uriParameters:
        id:
          description: 用户组ID
          example: 1
      get:
        description: 取得指定用户组ID的用户组信息
        responses:
          200:
            body:
              type: UserGroup
      put:
        description: 更新指定用户组ID的用户组信息
        is: [secured, dataError, serverError]
        body:
          type: UserGroupUpdate
        responses:
          200:
            body:
              type: UserGroup
      delete:
        description: 删除指定用户组ID的用户组信息
        is: [secured, dataError, serverError]
        responses:
          204:
          404:
      /role/{roleId}:
        uriParameters:
          roleId:
            description: 角色ID
            example: 1
        post:
          description: 用户组添加新的角色
          is: [secured, dataError, serverError]
          responses:
            201:
              body:
                type: Role
        delete:
          description: 用户组删除角色
          is: [secured, dataError, serverError]
          responses:
            204:
            404:
      /roles:
        get:
          description: 取得指定用户ID的角色列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Roles
      /user/{userId}:
        uriParameters:
          userId:
            description: 用户ID
            example: 1
        post:
          description: 用户组添加用户
          is: [secured, dataError, serverError]
          responses:
            201:
              body:
                type: User
        delete:
          description: 用户组删除用户
          is: [secured, dataError, serverError]
          responses:
            204:
            404:
      /users:
        get:
          description: 取得指定用户ID的用户列表
          is: [secured, serverError]
          responses:
            200:
              body:
                type: Users